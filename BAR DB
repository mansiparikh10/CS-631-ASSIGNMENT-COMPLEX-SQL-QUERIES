-- Create tables
CREATE TABLE FREQUENTS (
    DRINKER VARCHAR(50),
    BAR VARCHAR(50)
);

CREATE TABLE SERVES (
    BAR VARCHAR(50),
    BEER VARCHAR(50)
);

CREATE TABLE LIKES (
    DRINKER VARCHAR(50),
    BEER VARCHAR(50)
);


-- Insert values into FREQUENTS table
INSERT INTO FREQUENTS (DRINKER, BAR) VALUES ('John Smith', 'Bar A');
INSERT INTO FREQUENTS (DRINKER, BAR) VALUES ('John Smith', 'Bar B');
INSERT INTO FREQUENTS (DRINKER, BAR) VALUES ('Alice Johnson', 'Bar A');
INSERT INTO FREQUENTS (DRINKER, BAR) VALUES ('Alice Smith', 'Bar C');
INSERT INTO FREQUENTS (DRINKER, BAR) VALUES ('Bob Thompson', 'Bar B');
INSERT INTO FREQUENTS (DRINKER, BAR) VALUES ('Bob Williams', 'Bar C');
INSERT INTO FREQUENTS (DRINKER, BAR) VALUES ('Charlie Brown', 'Bar A');
INSERT INTO FREQUENTS (DRINKER, BAR) VALUES ('Charlie Garcia', 'Bar B');
INSERT INTO FREQUENTS (DRINKER, BAR) VALUES ('David Lee', 'Bar A');
INSERT INTO FREQUENTS (DRINKER, BAR) VALUES ('David Martinez', 'Bar C');

-- Insert values into SERVES table
INSERT INTO SERVES (BAR, BEER) VALUES ('Bar A', 'Beer X');
INSERT INTO SERVES (BAR, BEER) VALUES ('Bar A', 'Beer Y');
INSERT INTO SERVES (BAR, BEER) VALUES ('Bar A', 'Beer Z');
INSERT INTO SERVES (BAR, BEER) VALUES ('Bar B', 'Beer X');
INSERT INTO SERVES (BAR, BEER) VALUES ('Bar B', 'Beer Z');
INSERT INTO SERVES (BAR, BEER) VALUES ('Bar C', 'Beer Y');
INSERT INTO SERVES (BAR, BEER) VALUES ('Bar C', 'Beer Z');
INSERT INTO SERVES (BAR, BEER) VALUES ('Bar D', 'Beer X');
INSERT INTO SERVES (BAR, BEER) VALUES ('Bar D', 'Beer Y');
INSERT INTO SERVES (BAR, BEER) VALUES ('Bar D', 'Beer Z');

-- Insert values into LIKES table
INSERT INTO LIKES (DRINKER, BEER) VALUES ('John Smith', 'Beer X');
INSERT INTO LIKES (DRINKER, BEER) VALUES ('John Smith', 'Beer Z');
INSERT INTO LIKES (DRINKER, BEER) VALUES ('Alice Johnson', 'Beer Y');
INSERT INTO LIKES (DRINKER, BEER) VALUES ('Alice Johnson', 'Beer Z');
INSERT INTO LIKES (DRINKER, BEER) VALUES ('Bob Thompson', 'Beer X');
INSERT INTO LIKES (DRINKER, BEER) VALUES ('Bob Thompson', 'Beer Z');
INSERT INTO LIKES (DRINKER, BEER) VALUES ('Charlie Brown', 'Beer X');
INSERT INTO LIKES (DRINKER, BEER) VALUES ('Charlie Garcia', 'Beer Y');
INSERT INTO LIKES (DRINKER, BEER) VALUES ('David Lee', 'Beer Z');
INSERT INTO LIKES (DRINKER, BEER) VALUES ('David Lee', 'Beer Y');

--1.print the bars that serve a beer John Smith likes.
SELECT DISTINCT BAR
FROM SERVES S
JOIN
LIKES L
ON S.BEER = L.BEER
WHERE DRINKER = 'John Smith';

SELECT S.BAR 
FROM SERVES S 
INNER JOIN 
LIKES L 
ON S.BEER = L.BEER 
WHERE L.DRINKER = 'John Smith';

--2.print the drinkers that frequent at least one bar that serve a beer John Smith likes.

SELECT DISTINCT F.DRINKER
FROM FREQUENTS F
WHERE F.BAR IN (
    SELECT DISTINCT S.BAR
    FROM LIKES L, SERVES S
    WHERE L.DRINKER = 'John Smith' AND L.BEER =S.BEER
);

SELECT F.DRINKER 
FROM FREQUENTS F 
WHERE F.BAR IN ( 
    SELECT S.BAR 
    FROM SERVES S 
    INNER JOIN 
    LIKES L 
    ON S.BEER = L.BEER
    WHERE L.DRINKER = 'John Smith');

--3. print the drinkers that frequent at least one bar that serves a beer they like.
SELECT DISTINCT F.DRINKER
FROM FREQUENTS F
WHERE F.BAR IN (
    SELECT DISTINCT S.BAR
    FROM LIKES L, SERVES S
    WHERE L.DRINKER = F.DRINKER AND L.BEER = S.BEER
);


SELECT F.DRINKER 
FROM FREQUENTS F 
WHERE F.BAR IN ( 
SELECT S.BAR 
FROM SERVES S INNER JOIN LIKES L 
ON S.BEER = L.BEER
WHERE F.DRINKER = L.DRINKER);

--4. print the drinkers that frequent only bars that serve some beer they like.

SELECT DISTINCT F.DRINKER
FROM FREQUENTS F
WHERE NOT EXISTS (
    SELECT *
    FROM (SELECT DISTINCT F.DRINKER, F.BAR FROM FREQUENTS F) D
    WHERE D.DRINKER = F.DRINKER
    AND NOT EXISTS (
        SELECT *
        FROM LIKES L, SERVES S
        WHERE L.DRINKER = F.DRINKER AND L.BEER = S.BEER AND S.BAR = D.BAR
    )
);

SELECT DISTINCT F.DRINKER 
FROM FREQUENTS F 
WHERE NOT EXISTS (
    SELECT S.BAR FROM SERVES S WHERE S.BAR = F.BAR MINUS
    SELECT S.BAR FROM SERVES S INNER JOIN LIKES L 
    ON S.BEER = L.BEER 
    WHERE F.DRINKER = L.DRINKER);
    
--5. print the drinkers that frequent all the bars that serve a beer they like.

SELECT F.DRINKER 
FROM FREQUENTS F 
WHERE F.DRINKER NOT IN (
    SELECT L.DRINKER 
    FROM SERVES S, LIKES L 
    WHERE L.BEER=S.BEER 
    AND L.DRINKER NOT IN (
        SELECT DRINKER 
        FROM FREQUENTS
        WHERE BAR=S.BAR)
);

--6. print the drinkers that frequent no bar that serves a beer that they like.
SELECT F.DRINKER 
FROM FREQUENTS F 
WHERE F.DRINKER NOT IN (
    SELECT F.DRINKER 
    FROM FREQUENTS F, LIKES L, SERVES S
    WHERE S.BEER = L.BEER AND L.DRINKER = F.DRINKER AND S.BAR = F.BAR);
--or

SELECT DISTINCT F.DRINKER
FROM FREQUENTS F
WHERE NOT EXISTS (
    SELECT *
    FROM (SELECT DISTINCT F.DRINKER, f.BAR FROM FREQUENTS f) D
    WHERE D.DRINKER = F.DRINKER
    AND EXISTS (
        SELECT *
        FROM LIKES L, SERVES S
        WHERE L.DRINKER = F.DRINKER AND L.BEER = S.BEER AND S.BAR = D.BAR
    )
);

--7. print the drinkers that frequent all the bars that serve a beer John Smith likes.

SELECT DISTINCT F.DRINKER
FROM FREQUENTS F
WHERE NOT EXISTS (
    SELECT *
    FROM SERVES S
    WHERE S.BAR NOT IN (
        SELECT DISTINCT F.BAR
        FROM FREQUENTS F, LIKES L
        WHERE F.DRINKER = 'John Smith' AND L.BEER = S.BEER AND F.BAR = S.BAR
    )
);

SELECT DRINKER 
FROM FREQUENTS 
WHERE DRINKER NOT IN (
    SELECT F.DRINKER 
    FROM SERVES S, LIKES L , FREQUENTS F
    WHERE L.BEER=S.BEER AND L.DRINKER= 'John Smith' AND
    F.DRINKER NOT IN (SELECT DRINKER FROM FREQUENTS 
    WHERE BAR = S.BAR));

SELECT DISTINCT F.DRINKER
FROM FREQUENTS F
WHERE NOT EXISTS (
    SELECT S.BAR
    FROM SERVES S
    WHERE S.BEER IN (
        SELECT L.BEER
        FROM LIKES L
        WHERE L.DRINKER = 'John Smith'
    )
    AND S.BAR NOT IN (
        SELECT F1.BAR
        FROM FREQUENTS F1
        WHERE F1.DRINKER = F.DRINKER
    )
);

--8. print pairs of drinkers that frequent at least one common bar.

SELECT DISTINCT F1.DRINKER, F2.DRINKER
FROM FREQUENTS F1, FREQUENTS F2
WHERE F1.BAR = F2.BAR AND F1.DRINKER < F2.DRINKER;

--9. print pairs of drinkers that frequent exactly the same bars.

SELECT DISTINCT F1.DRINKER, F2.DRINKER
FROM FREQUENTS F1, FREQUENTS F2
WHERE F1.BAR = F2.BAR
GROUP BY F1.DRINKER, F2.DRINKER
HAVING COUNT(*) = (
    SELECT COUNT(*)
    FROM FREQUENTS
    WHERE DRINKER = F1.DRINKER
);

SELECT F1.DRINKER, F2.DRINKER 
FROM FREQUENTS F1, FREQUENTS F2 
WHERE F1.BAR=F2.BAR AND F1.DRINKER<>F2.DRINKER AND NOT EXISTS (
    SELECT * FROM FREQUENTS F3 
    WHERE F3.DRINKER=F1.DRINKER AND NOT EXISTS (
         SELECT *
        FROM FREQUENTS F4 
        WHERE F4.BAR=F3.BAR AND F4.DRINKER=F2.DRINKER)) AND NOT EXISTS (
            SELECT * 
            FROM FREQUENTS F5 WHERE F5.DRINKER=F2.DRINKER AND NOT EXISTS (
                SELECT *
                FROM FREQUENTS 
                WHERE BAR=F5.BAR AND DRINKER=F1.DRINKER));
--10. print the number of beer served per bar.
SELECT BAR, COUNT(BEER) AS NUM_BEERS
FROM SERVES
GROUP BY BAR;

SELECT S.BAR,COUNT(*) 
FROM SERVES S 
GROUP BY S.BAR;

--11. Which bar is the most popular?
SELECT BAR
FROM (
    SELECT BAR, COUNT(DISTINCT DRINKER)NUM_DRINKERS
    FROM FREQUENTS
    GROUP BY BAR
    ORDER BY NUM_DRINKERS DESC)
    WHERE ROWNUM = 1;
    
SELECT F.BAR 
FROM FREQUENTS F 
GROUP BY F.BAR
HAVING COUNT(*) >= (
    SELECT MAX(COUNT(*)) 
    FROM FREQUENTS 
    GROUP BY BAR
);

 
